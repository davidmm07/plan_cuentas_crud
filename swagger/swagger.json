{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/apropiacion/": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "get Apropiacion",
                "operationId": "ApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "apropiacion"
                ],
                "description": "create Apropiacion",
                "operationId": "ApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Apropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Apropiacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/apropiacion/AprobacionAsignacionInicial/": {
            "put": {
                "tags": [
                    "apropiacion"
                ],
                "description": "aprueba la asignacion inicial de presupuesto",
                "operationId": "ApropiacionController.AprobarPresupuesto",
                "parameters": [
                    {
                        "in": "query",
                        "name": "Vigencia",
                        "description": "vigencia a comprobar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de los rubros a comprobar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} resultado"
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/{id}": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "get Apropiacion by id",
                "operationId": "ApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "apropiacion"
                ],
                "description": "update the Apropiacion",
                "operationId": "ApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Apropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "apropiacion"
                ],
                "description": "delete the Apropiacion",
                "operationId": "ApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/date/FechaActual/{formato}": {
            "get": {
                "tags": [
                    "date"
                ],
                "description": "retorba fecga del servidor",
                "operationId": "Date.FechaActual",
                "parameters": [
                    {
                        "in": "formato",
                        "name": "formato",
                        "description": "quiere",
                        "schema": {
                            "$ref": "#/definitions/como"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_apropiacion/": {
            "get": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "get EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "create EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoApropiacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_apropiacion/{id}": {
            "get": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "get EstadoApropiacion by id",
                "operationId": "EstadoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "update the EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "delete the EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "get FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "create FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/{id}": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "get FuenteFinanciamiento by id",
                "operationId": "FuenteFinanciamientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "update the FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "delete the FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento_apropiacion/": {
            "get": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "get FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "create FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamientoApropiacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento_apropiacion/registrar_multiple": {
            "post": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "Crea una nueva fuente de financiamiento con la relación de sus rubros y sus dependencias a los rubros",
                "operationId": "FuenteFinanciamientoApropiacionController.RegistrarMultiple",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} int[]"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento_apropiacion/{id}": {
            "get": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "get FuenteFinanciamientoApropiacion by id",
                "operationId": "FuenteFinanciamientoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "update the FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "delete the FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rama/": {
            "get": {
                "tags": [
                    "rama"
                ],
                "description": "get Rama",
                "operationId": "RamaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rama"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "rama"
                ],
                "description": "create Rama",
                "operationId": "RamaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Rama content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rama"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Rama"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/rama/DeleteRubroRelation/{id}": {
            "delete": {
                "tags": [
                    "rama"
                ],
                "description": "delete the Rama",
                "operationId": "RamaController.DeleteRubroRelation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rama/{id}": {
            "get": {
                "tags": [
                    "rama"
                ],
                "description": "get Rama by id",
                "operationId": "RamaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rama"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "rama"
                ],
                "description": "update the Rama",
                "operationId": "RamaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Rama content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rama"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rama"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rama"
                ],
                "description": "delete the Rama",
                "operationId": "RamaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rubro/": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Rubro",
                "operationId": "RubroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "rubro"
                ],
                "description": "create Rubro",
                "operationId": "RubroController.Post",
                "parameters": [
                    {
                        "in": "query",
                        "name": "parentId",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Rubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Rubro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/rubro/{id}": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Rubro by id",
                "operationId": "RubroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "rubro"
                ],
                "description": "update the Rubro",
                "operationId": "RubroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Rubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rubro"
                ],
                "description": "delete the Rubro",
                "operationId": "RubroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_fuente_financiamiento/": {
            "get": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "get TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "create TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoFuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoFuenteFinanciamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_fuente_financiamiento/{id}": {
            "get": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "get TipoFuenteFinanciamiento by id",
                "operationId": "TipoFuenteFinanciamientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "update the TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoFuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "delete the TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "como": {
            "title": "como",
            "type": "object"
        },
        "models.Apropiacion": {
            "title": "Apropiacion",
            "type": "object",
            "properties": {
                "EstadoApropiacionId": {
                    "$ref": "#/definitions/models.EstadoApropiacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RubroId": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EstadoApropiacion": {
            "title": "EstadoApropiacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FuenteFinanciamiento": {
            "title": "FuenteFinanciamiento",
            "type": "object",
            "properties": {
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "TipoFuenteFinanciamiento": {
                    "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                }
            }
        },
        "models.FuenteFinanciamientoApropiacion": {
            "title": "FuenteFinanciamientoApropiacion",
            "type": "object",
            "properties": {
                "ApropiacionId": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "Dependencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "FuenteFinanciamientoId": {
                    "$ref": "#/definitions/models.FuenteFinanciamiento"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Rama": {
            "title": "Rama",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RubroHijo": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "RubroPadre": {
                    "$ref": "#/definitions/models.Rubro"
                }
            }
        },
        "models.Rubro": {
            "title": "Rubro",
            "type": "object",
            "properties": {
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "Organizacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TipoFuenteFinanciamiento": {
            "title": "TipoFuenteFinanciamiento",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "rubro",
            "description": "RubroController operations for Rubro\n"
        },
        {
            "name": "rama",
            "description": "RamaController operations for Rama\n"
        },
        {
            "name": "apropiacion",
            "description": "ApropiacionController operations for Apropiacion\n"
        },
        {
            "name": "estado_apropiacion",
            "description": "EstadoApropiacionController operations for EstadoApropiacion\n"
        },
        {
            "name": "tipo_fuente_financiamiento",
            "description": "TipoFuenteFinanciamientoController operations for TipoFuenteFinanciamiento\n"
        },
        {
            "name": "fuente_financiamiento",
            "description": "FuenteFinanciamientoController operations for FuenteFinanciamiento\n"
        },
        {
            "name": "fuente_financiamiento_apropiacion",
            "description": "FuenteFinanciamientoApropiacionController operations for FuenteFinanciamientoApropiacion\n"
        }
    ]
}